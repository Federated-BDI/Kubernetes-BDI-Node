# Common default values are present here. 
# Edit as required, and you may find the other possible values in the templates.

# Corda-Node Configuration 
corda-node:
  # Azure LoadBalancer usage configuration
  annotations:
    # service.beta.kubernetes.io/azure-load-balancer-resource-group: $AZURE_RESOURCE_GROUP # Replace with the resource group of the Azure Kubernetes cluster
 
  service:
    type: LoadBalancer
    loadBalancerIP: 127.0.0.1 # Replace with pre-instantiated Azure Public IP Address
    p2pPort: 10005
    rpcPort: 10006

  # Comment the following 4 lines if GraphDB will not be enabled in the following configuration!
  graphdb:
    enabled: true # Enable if enabled below.
    host: $HELM_DEPLOYMENT_NAME-graphdb
    port: 7200 # Use port defined below.
    privateRepository: private
    repository: federated-shacl

  image: corda/corda-zulu-java1.8-4.5.8:latest # Contains 0 contracts.
  # Contracts are currently pulled from the public Docker-BDI-Node repository, and mounted at 
  # /opt/corda/cordapps/. This may be made customizable in a subsequent release.
  # (See template for details)

  # Node configuration. Replace the IP address (127.0.0.1) for P2P with the pre-instantiated Azure Public IP Address.
  # Also, update nodeConf as required with the appropriate values.
  nodeConf: |-
    devMode=true
    myLegalName="O=TNO,L=Manila,C=ML,OU=ICT"
    p2pAddress="127.0.0.1:10005"
    rpcSettings {
        address="0.0.0.0:10006"
        adminAddress="0.0.0.0:10046"
    }
    security {
        authService {
            dataSource {
                type=INMEMORY
                users=[
                    {
                        password=vzzuABeCut3jGoJfEp94
                        permissions=[
                            ALL
                        ]
                        user=user1
                    }
                ]
            }
        }
    }
    devModeOptions.allowCompatibilityZone=true
    compatibilityZoneURL="https://nms.basicdatasharinginfrastructure.net"
  networkParameters: Y29yZGEBAAAAgMViAAAAAAAB0AAAEugAAAADAKMibmV0LmNvcmRhOmU5OHRFaFpvRGdDUGF3N2UvQ2dnTUE9PdAAAA8mAAAAAgCjIm5ldC5jb3JkYTpEYStQVnZhZ3IxWFRFSGdMV1lyVnNBPT3QAAALrAAAAAGwAAALo2NvcmRhAQAAAIDFYgAAAAAAAdAAAAuMAAAAAwCjIm5ldC5jb3JkYTprWlhLRHFhZ2o4WGd5UEdzZVVFUzJBPT3QAAACxgAAAAlUAwCjHG5ldC5jb3JkYTpqYXZhLnRpbWUuRHVyYXRpb27ADAJUAIEAAAAAACeNAHEAoAAAcX////9UBACjG25ldC5jb3JkYTpqYXZhLnRpbWUuSW5zdGFudMAPAoEAAAAAYynM8nEUBvQAAKMibmV0LmNvcmRhOkxtNkQ4UjVta3VjWkhCcW1DajZLbEE9PdAAAAHeAAAAAgCjIm5ldC5jb3JkYTpMZ0dBT2J2OWhYK3NnZm1BQTVRNnBBPT3AxgIAoyJuZXQuY29yZGE6SDlLT2k4YWdVdXNnS0tpM01FQjN4Zz09wJ0CAKMibmV0LmNvcmRhOm5nZHdidDZrUlQwbDVubjE2dWY4N0E9PcAjBkChAkpQoQpUZXN0Tm90YXJ5oQlOb3RhcnlPcmehA1ROT0AAoyFuZXQuY29yZGE6amF2YS5zZWN1cml0eS5QdWJsaWNLZXmgLDAqMAUGAytlcAMhAD1oFra4DaIvnVcIw8fo1bhSEZpit2YpWNruQGFbB6gdQgCjIm5ldC5jb3JkYTpMZ0dBT2J2OWhYK3NnZm1BQTVRNnBBPT3AxgIAoyJuZXQuY29yZGE6SDlLT2k4YWdVdXNnS0tpM01FQjN4Zz09wJ0CAKMibmV0LmNvcmRhOm5nZHdidDZrUlQwbDVubjE2dWY4N0E9PcAjBkChAkpQoQpUZXN0Tm90YXJ5oQlOb3RhcnlPcmehA1ROT0AAoyFuZXQuY29yZGE6amF2YS5zZWN1cml0eS5QdWJsaWNLZXmgLDAqMAUGAytlcAMhAPP54KiBTLW6hk2TBwqL6KXsajmh2y0UrpFRGIcYX5aLQgCjIm5ldC5jb3JkYTpaWjgxQ1Y1WVVrczFld1NHcEhuNFRRPT3BAQAAoyJuZXQuY29yZGE6WGMyVUpDaGU5ay9hQSs0dmk0WTZuZz09wQEAAIDFYgAAAAAAAtAAAAh8AAAAAdAAAAhzAAAACQCAxWIAAAAAAAXQAAACpAAAAAWhJW5ldC5jb3JkYS5jb3JlLm5vZGUuTmV0d29ya1BhcmFtZXRlcnNARQCAxWIAAAAAAAPAJgKjIm5ldC5jb3JkYTprWlhLRHFhZ2o4WGd5UEdzZVVFUzJBPT1A0AAAAkAAAAAJAIDFYgAAAAAABMAUB6EFZXBvY2ihA2ludEWhATBAQUIAgMViAAAAAAAEwCgHoQxldmVudEhvcml6b26hEmphdmEudGltZS5EdXJhdGlvbkVAQEFCAIDFYgAAAAAABMAdB6EObWF4TWVzc2FnZVNpemWhA2ludEWhATBAQUIAgMViAAAAAAAEwCEHoRJtYXhUcmFuc2FjdGlvblNpemWhA2ludEWhATBAQUIAgMViAAAAAAAEwCUHoRZtaW5pbXVtUGxhdGZvcm1WZXJzaW9uoQNpbnRFoQEwQEFCAIDFYgAAAAAABMAnB6EMbW9kaWZpZWRUaW1loRFqYXZhLnRpbWUuSW5zdGFudEVAQEFCAIDFYgAAAAAABMBFB6EIbm90YXJpZXOhASrAMQGhLmphdmEudXRpbC5MaXN0PG5ldC5jb3JkYS5jb3JlLm5vZGUuTm90YXJ5SW5mbz5AQEFCAIDFYgAAAAAABMBNB6EQcGFja2FnZU93bmVyc2hpcKEBKsAxAaEuamF2YS51dGlsLk1hcDxzdHJpbmcsIGphdmEuc2VjdXJpdHkuUHVibGljS2V5PkBAQUIAgMViAAAAAAAEwHgHoSJ3aGl0ZWxpc3RlZENvbnRyYWN0SW1wbGVtZW50YXRpb25zoQEqwEoBoUdqYXZhLnV0aWwuTWFwPHN0cmluZywgamF2YS51dGlsLkxpc3Q8bmV0LmNvcmRhLmNvcmUuY3J5cHRvLlNlY3VyZUhhc2g+PkBAQUIAgMViAAAAAAAGwGwGoS5qYXZhLnV0aWwuTGlzdDxuZXQuY29yZGEuY29yZS5ub2RlLk5vdGFyeUluZm8+QEWhBGxpc3QAgMViAAAAAAADwCYCoyJuZXQuY29yZGE6TG02RDhSNW1rdWNaSEJxbUNqNktsQT09QEUAgMViAAAAAAAFwMAFoR5uZXQuY29yZGEuY29yZS5ub2RlLk5vdGFyeUluZm9ARQCAxWIAAAAAAAPAJgKjIm5ldC5jb3JkYTpMZ0dBT2J2OWhYK3NnZm1BQTVRNnBBPT1AwGkCAIDFYgAAAAAABMAvB6EIaWRlbnRpdHmhHW5ldC5jb3JkYS5jb3JlLmlkZW50aXR5LlBhcnR5RUBAQUIAgMViAAAAAAAEwCEHoQp2YWxpZGF0aW5noQdib29sZWFuRaEFZmFsc2VAQUIAgMViAAAAAAAFwNEFoR1uZXQuY29yZGEuY29yZS5pZGVudGl0eS5QYXJ0eUBFAIDFYgAAAAAAA8AmAqMibmV0LmNvcmRhOkg5S09pOGFnVXVzZ0tLaTNNRUIzeGc9PUDAewIAgMViAAAAAAAEwDMHoQRuYW1loSVuZXQuY29yZGEuY29yZS5pZGVudGl0eS5Db3JkYVg1MDBOYW1lRUBAQUIAgMViAAAAAAAEwC8HoQlvd25pbmdLZXmhASrAGgGhF2phdmEuc2VjdXJpdHkuUHVibGljS2V5QEBBQgCAxWIAAAAAAAXQAAABRAAAAAWhJW5ldC5jb3JkYS5jb3JlLmlkZW50aXR5LkNvcmRhWDUwME5hbWVARQCAxWIAAAAAAAPAJgKjIm5ldC5jb3JkYTpuZ2R3YnQ2a1JUMGw1bm4xNnVmODdBPT1AwOMGAIDFYgAAAAAABMAaB6EKY29tbW9uTmFtZaEGc3RyaW5nRUBAQkIAgMViAAAAAAAEwBcHoQdjb3VudHJ5oQZzdHJpbmdFQEBBQgCAxWIAAAAAAATAGAehCGxvY2FsaXR5oQZzdHJpbmdFQEBBQgCAxWIAAAAAAATAHAehDG9yZ2FuaXNhdGlvbqEGc3RyaW5nRUBAQUIAgMViAAAAAAAEwCAHoRBvcmdhbmlzYXRpb25Vbml0oQZzdHJpbmdFQEBCQgCAxWIAAAAAAATAFQehBXN0YXRloQZzdHJpbmdFQEBCQgCAxWIAAAAAAAbAawahLmphdmEudXRpbC5NYXA8c3RyaW5nLCBqYXZhLnNlY3VyaXR5LlB1YmxpY0tleT5ARaEDbWFwAIDFYgAAAAAAA8AmAqMibmV0LmNvcmRhOlpaODFDVjVZVWtzMWV3U0dwSG40VFE9PUBFAIDFYgAAAAAABsCEBqFHamF2YS51dGlsLk1hcDxzdHJpbmcsIGphdmEudXRpbC5MaXN0PG5ldC5jb3JkYS5jb3JlLmNyeXB0by5TZWN1cmVIYXNoPj5ARaEDbWFwAIDFYgAAAAAAA8AmAqMibmV0LmNvcmRhOlhjMlVKQ2hlOWsvYUErNHZpNFk2bmc9PUBFAIDFYgAAAAAABsBuBqEwamF2YS51dGlsLkxpc3Q8bmV0LmNvcmRhLmNvcmUuY3J5cHRvLlNlY3VyZUhhc2g+QEWhBGxpc3QAgMViAAAAAAADwCYCoyJuZXQuY29yZGE6Y1NrenFic2t1SjB0ekdTbzFrK1p2dz09QEUAgMViAAAAAAAFwLsFoSBuZXQuY29yZGEuY29yZS5jcnlwdG8uU2VjdXJlSGFzaEBFAIDFYgAAAAAAA8AmAqMibmV0LmNvcmRhOmI3OVBlTUJMc0h4dTJBMjN5RFlSYUE9PUDAYgMAgMViAAAAAAAEwBUHoQVieXRlc6EGYmluYXJ5RUBAQUIAgMViAAAAAAAEwBUHoQZvZmZzZXShA2ludEWhATBAQUIAgMViAAAAAAAEwBMHoQRzaXploQNpbnRFoQEwQEFCAIDFYgAAAAAACcEBAACjIm5ldC5jb3JkYTpWVEh4dmZNWGFBT1dxekpnNHcvQVBRPT3QAAADIgAAAAMAoyxuZXQuY29yZGE6amF2YS5zZWN1cml0eS5jZXJ0Llg1MDlDZXJ0aWZpY2F0ZbAAAAJ6MIICdjCCAhKgAwIBAgIIPd9VKcHXJm4wFAYIKoZIzj0EAwIGCCqGSM49AwEHMIGDMQswCQYDVQQGEwJHQjEPMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xGzAZBgNVBAoMEkNvcmRpdGUgRm91bmRhdGlvbjEjMCEGA1UECwwaQ29yZGl0ZSBGb3VuZGF0aW9uIE5ldHdvcmsxEDAOBgNVBAMMB1Jvb3QgQ0EwHhcNMjIwOTIwMDAwMDAwWhcNMzIwOTE3MDAwMDAwWjBRMQswCQYDVQQGEwJHQjEPMA0GA1UEBxMGTG9uZG9uMRswGQYDVQQKExJDb3JkaXRlIEZvdW5kYXRpb24xFDASBgNVBAMTC05ldHdvcmsgTWFwMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIUFT8JilTkBDHqGhWbuG/5r6MGCnh3sA0K9M8URyWBnM43DPD0SjaUxfYta1xbyjs44+TRZ+cPs3Dd5Vix0nwKOBljCBkzAdBgNVHQ4EFgQUKTlYM8LPgrN93aWne+Od6yNw3XkwDAYDVR0TAQH/BAIwADALBgNVHQ8EBAMCB4AwIwYDVR0lBBwwGgYIKwYBBQUHAwEGCCsGAQUFBwMCBgRVHSUAMB8GA1UdIwQYMBaAFHo9j5zTITOkrNwCpKJAX2MdtN9YMBEGCisGAQQBg4piAQEEAwIBAjAUBggqhkjOPQQDAgYIKoZIzj0DAQcDSAAwRQIhAIWLaRgHR/V5weBn8yb0E5eWwpo5IJaKjREiyACvhjLTAiBtA8RGg3OTVSSEL+7+RuTfidyBM+x1XcSL8vvsC+frz6BIMEYCIQDccJjuhYHUl2QzARptXZvu4YDNuPjZVt7QG2WM5HgMxQIhAL7gSoYQ7bEfkwFWh33JjSppmMaPgiPbIe/zbtWG/CxjAKMibmV0LmNvcmRhOllSRFV0d2EvaDUzSlRqa2g2WjV2K0E9PUUAgMViAAAAAAAC0AAAA3gAAAAB0AAAA28AAAAEAIDFYgAAAAAABdAAAAEHAAAABaEqbmV0LmNvcmRhLmNvcmUuaW50ZXJuYWwuU2lnbmVkRGF0YVdpdGhDZXJ0QEUAgMViAAAAAAADwCYCoyJuZXQuY29yZGE6ZTk4dEVoWm9EZ0NQYXc3ZS9DZ2dNQT09QMChAgCAxWIAAAAAAATASwehA3Jhd6E+bmV0LmNvcmRhLmNvcmUuc2VyaWFsaXphdGlvbi5TZXJpYWxpemVkQnl0ZXM8amF2YS5sYW5nLk9iamVjdD5FQEBBQgCAxWIAAAAAAATAPQehA3NpZ6EwbmV0LmNvcmRhLmNvcmUuaW50ZXJuYWwuRGlnaXRhbFNpZ25hdHVyZVdpdGhDZXJ0RUBAQUIAgMViAAAAAAAFwJkFoT5uZXQuY29yZGEuY29yZS5zZXJpYWxpemF0aW9uLlNlcmlhbGl6ZWRCeXRlczxqYXZhLmxhbmcuT2JqZWN0PkBFAIDFYgAAAAAAA8AmAqMibmV0LmNvcmRhOkRhK1BWdmFncjFYVEVIZ0xXWXJWc0E9PUDAIgEAgMViAAAAAAAEwBUHoQVieXRlc6EGYmluYXJ5RUBAQUIAgMViAAAAAAAF0AAAASUAAAAFoTBuZXQuY29yZGEuY29yZS5pbnRlcm5hbC5EaWdpdGFsU2lnbmF0dXJlV2l0aENlcnRARQCAxWIAAAAAAAPAJgKjIm5ldC5jb3JkYTpWVEh4dmZNWGFBT1dxekpnNHcvQVBRPT1AwLkDAIDFYgAAAAAABMAuB6ECYnmhImphdmEuc2VjdXJpdHkuY2VydC5YNTA5Q2VydGlmaWNhdGVFQEBBQgCAxWIAAAAAAATAFQehBWJ5dGVzoQZiaW5hcnlFQEBBQgCAxWIAAAAAAATAUQehEHBhcmVudENlcnRzQ2hhaW6hASrANQGhMmphdmEudXRpbC5MaXN0PGphdmEuc2VjdXJpdHkuY2VydC5YNTA5Q2VydGlmaWNhdGU+QEBBQgCAxWIAAAAAAAbAcAahMmphdmEudXRpbC5MaXN0PGphdmEuc2VjdXJpdHkuY2VydC5YNTA5Q2VydGlmaWNhdGU+QEWhBGxpc3QAgMViAAAAAAADwCYCoyJuZXQuY29yZGE6WVJEVXR3YS9oNTNKVGpraDZaNXYrQT09QEUAgMViAAAAAAAJwQEA
  secrets:
    create: true
    name: corda-secrets
    networkTrustStore:
      base64: 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

# Corda Client API Configuration
corda-client-api:
  # Whether or not the accompanying Spring Boot client API instance is deployed
  enabled: true

  # Service type and port set for the Spring Boot API.
  service:
    type: ClusterIP
    port: 10050
  
  # Image values
  image:
    name: tystnad/corda-client-springboot:0.1.6 # Default image used for applications (change for development)
    pullPolicy: Always

  # Configuration parameters
  # Replace the $HELM_DEPLOYMENT_NAME with the values you used for the deployment
  client:
    tradelens:
      apikey: "test"
      orgId: "test"
    semanticadapter:
      protocol: http
      host: $HELM_DEPLOYMENT_NAME-semantic-adapter
      port: 1337
      path: tradelens-events
    graphdb:
      host: $HELM_DEPLOYMENT_NAME-graphdb
      port: 7200
      privateRepository: private
      repository: federated-shacl


  # Enable ingress on the image (default parameters, see template for details)
  ingress:
    enabled: true
    # Replace with hostname you wish to use (see template for details). 
    # TLS is automatically added, if LetsEncrypt ClusterIssuer is configured for the cluster.
    host: $HOSTNAME


  # Configuration used for the server.
  configmap:
    # Server Port (Use same as above!)
    server:
      port: 10050
    
    # Access information for the Corda Node (Use same as in the Corda configuration above!)
    config:
      rpc:
        host: $HELM_DEPLOYMENT_NAME-corda-node # Replace with the same name used for the deployment.
        port: 10006
        username: user1
        password: vzzuABeCut3jGoJfEp94


# Supporting GraphDB configuration
graphdb:
  # Whether an accompanying GraphDB instance is deployed.
  enabled: true

  # Service type and port set for the GraphDB instance.
  service:
    type: ClusterIP
    port: 7200

  # Custom resources in Kubernetes may be defined here. See templates for more details. 
  resources: {}


# Supporting GraphDB configuration
semantic-adapter:
  enabled: true

  # Image names
  image:
    name: tystnad/semantic-adapter:tl-0.1
    pullPolicy: IfNotPresent

  # Service type and port set for the semantic adapter instance.
  service:
    type: ClusterIP
    port: 1337

  # Custom resources in Kubernetes may be defined here. See templates for more details.
  resources: {}
